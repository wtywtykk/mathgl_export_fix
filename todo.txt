-Wall -Wsuggest-attribute=pure -Wsuggest-attribute=const

============= FAR FUTURE ================

1. Graph(mreal x, mreal y, names, styles, font, size); -- names = "node1[node2,node3,node4[node5,node6]]", styles -- the same + apply for subnodes if absent. Styles are colors (fill,border,line), dash (to subnodes), marks "dos^v><", arrows.
2. introduce new primitive type=5 -- arrow for Quality&3!=3. for better drawing in projections + json/view ?!?
3. GTK window/widgets ???
4. 2D textures as one of standard way for coloring -- if '%' present in color scheme
5. Improve fplot, fsurf ???
6. Get true coordinates in CalcXYZ for curved equations too.
7. setLineDash in JSON

============= NEW FOR LATER =============

1. Export to COLLADA !!!
2. 3D text (with depth, for Quality=3)
3. Text along 3D curve (for Quality=3)
4. Check centered curved text (see text2)
5. Export to X3D

6. New tests:
	c. Tests for mglDataC arrays (as separate flag)
	e. Test for Crop, Momentum, NormSl, Sew, DiffParam, Envelope, STFA for all directions "xyz"; Clean, Last, First, Find, Spline3, FindAny, Insert, Delete, Put, SetId/Column, Squeeze, Extend, Trace, Combine, new Max/Min/Momentum, FillSample, Hist, operators, Sort, Roots, Jacobian
	u. Test FlowP + 3d

7. Inplot data should have ranges (add mglInPlot{x1,x2,y1,y2,Bp or something like this} which include mglMatrix instead of mglBase::Bp) + calc coor + JS
8. 'perspective' command in UDAV
9. Test mglDataC::Diffraction() + write sample + add rational function???

10. add real(), imag(), conj() + accurate types in MGL + add 'complex' in MGL ???

11. Enable consecutive (as multiplication of matrices instead of single summary one) rotation of axis + the same in JS. Problem with widgets?!?
13. Complex (hex) colors in inline text command (like #{b9} or #{x0000ff})
14. Extra markers for '&' and '&#' signs ?!?
15. Read JPEG files for Background() and mglData::Import()
16. Adjust format for printed numbers (i.e. write function which will produce shortest text) + flag of fixed format + flag of TeX-notation
19. create PWT fonts ???

YY. Optimize code (especially Quality=0 ?!?)
ZZ. Update *.i for new functions {before release!!!}

============= DOCUMENTATION =============

A. Paper about MathGL!!!
B. Add chapter with real samples
C. Translate to Russian everything

1. Extend Dots sample (add A, CA, Tens)
2. Extend Refill sample (add 2d)
3. Docs about JS interface

4. Extend docs about region
5. Docs about mgl_datac_diffr
6. Docs about GetBGRN
7. Add arrow style 'X' into docs and samples
8. Semi-transparent background can be done by "clf 'r{A5}'"
9. Extend "How can I exclude a point or a region of plot from the drawing?" + using SubData()/Evaluate()
10. Docs about mgl_data_subdata_ext() with NULL argument(s) + new SubData() variants
11. Manual dashing, like "{df090}" + extend "style"-sample by manual dashing
12. Manual mask, like "{s00ff00182424f800}" + change "mask"-sample + fix text about manual mask
13. Replace Cmin,Cmax,Min,Max,... by "color range", "axis range" and so on
14. Docs + sample about Rasterize()
15. Sample like http://pyxplot.org.uk/examples/05ap/02hlines/index.html using Stem()
16. mgl_ode_solve_ex()
17. AddVar() always recreate data as mglData
18. Add function random(dat) for list of known functions
19. Docs about mgl_data_set_name, mgl_data_set_func
20. Docs about mgl_suppress_warn
21. Fortran versions for: mgl_data_info, mgl_datas_hdf, mgl_get_fit, mgl_get_mess, mgl_get_plotid
22. Docs about Polygon, Angle.
23. Docs about mgl_check_version() and 'version'
24. Docs about new SetTicks() and mgl_set_ticks_fact*()
25. Notice about MGL_HAVE_C99_COMPLEX, MGL_SYS_NAN into "Installation" section.
26. Style 'f' for fixed format (like "%.2f") in Table() and Label().
27. Color gradient (color scheme) for glyphs of text + update sample
28. Hint about flow threads and contour lines (as ODE and for advanced users).
29. Howto about plot ranges (subplot styles)

============= UDAV =============

01. Show plot at creation stage (if option is enabled -- can be long process!!!) + auto axis range or [-1,1] by default

02. Double click -> setup dialog (optionally -- after QTreeWidgetItem)

03. Dialog for InPlot(s):
{SubPlot,MultiPlot}	-- enable rotate,aspect,title
{ColumnPlot}		-- enable rotate,several
{StickPlot}			-- enable several
{InPlot}			-- enable rotate,aspect,title
Image with gray alternatives and black choice

04. QTreeWidgetItem -- ICON (func/call,if,for,once,subplot,...); annotation/name; (keep LINE - POS in script). After editing/changing --> put text to editor.

1 - other data plot	-- preview.xpm
2 - func plot,		-- func.xpm [or plot.xpm ???]
3 - setup			-- preferences-system.png
4 - data handle		-- oper_dir.xpm
5 - data create		-- table.xpm
6 - subplot			-- box.xpm
7 - program			-- media-playback-start.png
8 - 1d plot			-- plot.xpm
9 - 2d plot			-- preview.xpm
10 - 3d plot		-- light.xpm
11 - dd plot		-- preview.xpm
12 - vector plot	-- view-fullscreen.png
13 - axis			-- mark_pf.xpm
14 - primitives		-- curve.xpm
15 - axis setup		-- preferences-system.png
16 - text/legend	-- text.xpm
17 - data transform	-- oper_dir.xpm
comment (not sure)	-- comment.xpm
group of several	-- package-x-generic.png
hidden				-- none.xpm ???

Buttons: new,load,save // newcmd,hide,annotation,collapse on/off,setup // calc. Click on item cause change of line number in editor.

05. Group/ungroup if command in single line, separated by ':'. Autoreplace "::"->":", ":\n"->"\n".
06. Hide plot/group by putting "#h " at beginning of line
07. Annotation of plot/group -- comment before it
08. Drag&drop plot/group between inplots (in tree widget)

09. Create default plot dependently of selected row/column/range in data table
10. Data change via menu/toolbar -- save to internal script => enable undo + save initial array(?)

11. Speed up rotation like as done in JavaScript

12. Multi-threading for enabling "stop".

13. Manual rotate (i.e. change rotate arguments) by spinboxes ??? or sync View and Rotate

15. Hex colors, hex masks, hex dashing into dialog of styles

============= UNSURE ===========

1. \dfrac for normal size and centering  (sample \big\big{\frac{1}{2}}) ???
2. "Cut off" curves if text is printed inside it (for contour labels) ?!?
3. String variables in MGL + readstr command.
4. Read DICOM files
5. Check RunThr() in python/octave
6. Auto axis range for formulas, like AutoRange("y(x)") or AutoRange('x',"x(t)").
7. Use Hershey as built-in font ??? -- for smaller size only
