============= TEST =============

1. MGL testing system
2. test pthread for windows
3. Check export to MGLD/TeX/OBJ/XGL/X3D/STL.
4. add XInitThreads() from #include <X11/Xlib.h> into all GUI
5, Fl::lock() for Update()?!? + similar for Qt

============= NEW  =============

2. Export to X3D and VRML
3. Sample for TriPlot (piramid) and QuadPlot (cube)

============= FOR V.2.1 ========

1. MPI_Send(), MPI_Recv()
2. Use Hershey as built-in font ???
3. Import/Export via GIF (as 3d data) ???
4. Read DICOM files.
5. Export to JavaScript (WebGL)
6. GTK and WX window/widgets
7. Labels at TriCont()

8. Option 'absolute' for coordinates in absolute range (i.e. [0,1]) ???
9. Save primitives for frames (not bitmap) ??? -- see MGL_USEDRWDAT
10. Enable several fonts at the same picture
11. Table(float x, float y, HCDT dat, char *xlabels, char *ylabels, char *stl) -- draw table with values (+ auto reduce font size?)
12. Parallelization of drawing (MathGL level) -- bug with primitives drawing --> pixel.cpp
13. Triangulation + GridData (for interpolation to regular grid)
14. Axis -- projection (ternary + quaternary)
15. Examples of animation, u3d, x3d, js and so on

16. Check fontsize maximum ?!?
17. curved text (in new sample) look not so good
18. emulate fog in EPS/SVG
19. line segment losses in EPS ???

20. ReadHDF5 -- add string argument for handling lowest dimension (like complex numbers): "sum" - sum, "arg" - arg, "0...9" read slice 0...9, "abs" - sqrt(sum []^2)

============= UDAV =============

01. Dialog for data input
-----------------------------------------------
| [Data name |V|]				      |
| [x1]     [x2]		[func]		{ADD} |
| [y1]     [y2]		[suf|V]		{ADD} |
| [z1]     [z2]	[oper|V] [dir]	{ADD} |
| Reuslt [				]		      |
| 			{Cancel}	{OK}		  |
-----------------------------------------------
Ranges can be inverted.
Remove other setting if data name is changed.

02. Double click -> jump to string + setup dialog (optionally)
03. Dialog for InPlot(s):
{SubPlot,MultiPlot}	-- enable rotate,aspect,title
{ColumnPlot}		-- enable rotate,several
{StickPlot}		-- enable several
{InPlot}		-- enable rotate,aspect,title

04. Group/ungroup if command in single line, separated by ':'
05. Hide plot/group by putting "#h " at beginning of line
06. Annotation of plot/group -- comment before it
09. Data change via menu/toolbar -- save to internal script => enable undo + save initial array(?)
10. Add primitives by mouse at beginning of script + change its size/position by mouse + "attraction" points
11. Drag&drop plot/group between inplots
12. Create default plot dependently of selected row/column/range in data table
13. Show plot at creation stage (if option is enabled -- can be long process!!!)
14. Rotate/perspective/lighting/... of primitive list (without script re-execution)

15. QTreeWidgetItem -- ICON (if,for,once,subplot,...); Cmd text; LINE - POS in group/line. After editing/changing --> put text to editor.

17. Setupable hot-keys ?!?
18. Insert just filename (without path) by demand

============= UNSURE ===========

1. Problem with \calB and so on (\calH, ...) -- they are present only in italic font :(.
2. create PWT fonts
3. \dfrac for normal size and centering  (sample \big\big{\frac{1}{2}}) ???
4. "Cut off" curves if text is printed inside it (for contour labels) ?!?
5. String variables in MGL + readstr command.
6. Pool of threads for speeding up ???
7. Drops as mglPrim -- not accurate but smaller memory and faster
8. Text aspect ratio in OpenGL mode

============= DOCS =============

1. Write "Quick start" userguide
2. FAQ about sizes of plot (parametrical+inverted, or Min*Max)
3. FAQ about MinGW -- http://www.mingw.org/wiki/FAQ
4. MGL docs -- text what formulas are applicable for scalars too.
6. Add help about cmake and GIF/JPEG to the "Installation and using"
7. On which things the subplot influence
8. About unrotated text
9. Add "Howto" section
10. New samples + update old ones
11. Parallelization:
	* user level -- SetDrawReg(), PutDrawReg() -- remove!?!
	* MPI level -- Combine()
	* MathGL level -- pthread in mglData, ???
12. Boxs() styles: '#' for wire, '@' for full box.
13. mglData::SetVal(), GetVal()
14. Highlight(), changes in Execute() -- highlighting
15. Add mgl_label_xyz(), mgl_label_xy(), mgl_label_y(). Possible numbers are: "%x" for x-coor, "%y" for y-coor, "%z" for z-coor.
16. Check mglData::Insert(): now copy values from original array (x[i] -> x[2*i], x[2*i+1], ...)
17. Symbol '!' denote sharp colors even in 1d plots (like different colors for points)
18. Check Zoom() + in widgets (ToggleZoom(),...)
19. ExportMGLD(), ImportMGLD() points+primitives to *.mgld file.
20. Box() draw faces if '@' is specified
21. Check export to LaTeX.
22. Add DifLight() for diffusive light (for local sources only) + option "diffuse on|off" + local version of Light()/'light'. Default is diffuse light for local sources
23. mglview can preview MGLD files too -- check it
24. Handle mglBase::Stop everywhere
25. Number of frames can be changed at reload + manual call of draw_func if number of frames is 0.
26. Symbol '\' at the end continue string in MGL script
27. Add mgl_data_sort(HMDT dat, long idx); -- sort rows of x-y table (or slices of 3D data) by value of idx-column (and idy-row for nz>1). Not thread safe!!!
28. Add mgl_tape_*(), Tape() -- draw tapes which rotate as (bi)normale of curve. Width by value or depend on BarWidth
29. Flow() and FlowP() draw tape of (bi)normales if character 'x' and/or 'z' is specified.
30. Add MGL command "ask $N 'question'" -- like interactive "define". User (UDAV) must set mgl_ask_func to some non-zero value
31. Cones() -- like Bars() but by Cone(). Support 'a' for above.
32. Add Class diagram for MathGL core
33. Add GridPlot -- Like ColumnPlot but grid
34. Copy text about formats of SetTickTime from "man localtime" + comment about default values. Allow d=0 -- automatic step selection.
35. Add mglBase, mglCanvas in other_en.texi + small comments about developing new plots.

============= BUGS =============

1. утилиты (mgl2png и пр.) вылетают, если в коментариях русские буквы

========= Docs structure =======

	1. Overview
		1.1 What is MathGL?
		1.2 Installation and usage
		1.3 Quick start
		1.4 Changes from v.1.*
		1.5 Utilities
		1.6 Thanks

	2. Examples
		2.1 Basic usage (window; file; memory; QMathGL; Fl_MathGL; PyQt)
		2.2 Advanced usage (subplots; axis; curv.coor; text)
		2.3 Animation (win.stat; win.update; gif; jpeg/mpeg)
		2.4 Data handling
		2.5 1D data plotting
		2.6 2D data plotting
		2.7 3D data plotting
		2.8 Dual data plotting
		2.9 Multi-threading
		2.10 Hints
		2.11 FAQ

	3 General concepts (class-diagram)
		3.1 Coordinate axes
		3.2 Line styles
		3.3 Color scheme
		3.4 Font styles
		3.5 Textual formulas
		3.6 Command options
		3.7 Interfaces (c++/python; c/fortran; mgl)

	3. MathGL core
		3.1 Create and delete objects
		3.2 Graphics setup
		3.3 Axis settings
		3.4 Transformation matrix
		3.5 Export picture
		3.6 Primitives drawing
		3.7 Text printing
		3.8 Axis and Colorbar
		3.9 Legend
		3.10 1D plotting
		3.11 2D plotting
		3.12 3D plotting
		3.13 Dual plotting
		3.14 Vector fields
		3.15 Other plotting
		3.16 Nonlinear fitting
		3.17 Data manipulation

	4. Widget classes
		4.1 mglWindow class
		4.2 Fl_MathGL class
		4.3 QMathGL class

	5. Data processing
		5.1 Public variables
		5.2 Data constructor
		5.3 Data resizing
		5.4 Data filling
		5.5 File I/O
		5.6 Make another data
		5.7 Data changing
		5.8 Interpolation
		5.9 Data information
		5.10 Operators
		5.11 Global functions

	6 MGL scripts
		6.1 MGL definition
		6.2 mglParse class
		6.3 Program flow commands

	7. Other classes (c++ only)
		7.1 mglBase class
		7.2 mglDataA class
		7.3 mglCanvas class
		7.4 mglFormula class
		7.5 mglColor class
		7.6 mglPoint class
		7.7 mglFont class (format)
